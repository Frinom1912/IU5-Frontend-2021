{"version":3,"sources":["String.js","Input.js","App.js","reportWebVitals.js","index.js"],"names":["String","id","val","check","AddNear","SaveVal","styles","type","onKeyDown","onChange","className","placeholder","value","Input","Change","disable","disabled","defaultChecked","list","App","React","useState","strings","setString","UpdateLocalStorage","arr","localStorage","clear","forEach","element","ind","setItem","toString","newArr1","length","lenStr","Number","push","getItem","getMaxId","res","i","event","key","preventDefault","target","newArr","parseInt","slice","map","el","flag","document","getElementById","childNodes","checked","style","textDecoration","color","str","onClick","newList","filter","Delete","Add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.18a0e96c.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./App.css\"\r\n\r\nconst Text = \"Введите задачу\";\r\n\r\nfunction String({id, val, check, AddNear, SaveVal}) {\r\n    let styles = \"String uncrossed\";\r\n    if (check === 1) {\r\n      styles = \"String crossed\"\r\n    }\r\n    return (<textarea type=\"text\" id={id+\"t\"} onKeyDown={AddNear} onChange={SaveVal} className={styles}  placeholder={Text} value={val}></textarea>)\r\n  }\r\nexport default String;  ","import React from 'react'\r\nimport \"./App.css\"\r\n\r\n\r\nfunction Input({id, Change, check, val}) {\r\n    let disable = val===\"\";\r\n    return (<input className=\"cbx\" type=\"checkbox\" onChange={()=>Change(id)} disabled={disable} defaultChecked={check}></input>)\r\n  }\r\nexport default Input;  ","import './App.css';\r\nimport React from 'react';\r\nimport String from \"./String.js\"\r\nimport Input from \"./Input\"\r\n\r\nconst list = {\r\n  id: 0, \r\n  val: \"\",\r\n  check: 0\r\n}\r\n\r\nfunction App() {\r\n  const [strings, setString] = React.useState([]);\r\n  function UpdateLocalStorage(arr) {\r\n    localStorage.clear();\r\n    arr.forEach((element, ind) => {\r\n      localStorage.setItem(`id ${ind.toString()}`, element.id);\r\n      localStorage.setItem(`val ${ind.toString()}`, element.val);\r\n      localStorage.setItem(`check ${ind.toString()}`, element.check);\r\n    });\r\n  }\r\n\r\n  let newArr1 = [];\r\n  if(strings.length === 0) {\r\n    if(localStorage.length === 0)\r\n      setString([list]);\r\n    else {\r\n      for(let ind = 0, lenStr = 0; true; ind++) {\r\n        if(Number(lenStr) === Number(localStorage.length / 3)) \r\n          break;\r\n        newArr1.push({id:Number(localStorage.getItem(`id ${lenStr.toString()}`)), val:localStorage.getItem(`val ${lenStr.toString()}`), check:Number(localStorage.getItem(`check ${lenStr.toString()}`))}); \r\n        lenStr++;\r\n      }\r\n      \r\n      setString(newArr1);\r\n    }\r\n  }\r\n\r\n  function getMaxId(arr) {\r\n    let res = arr[0].id;\r\n    for(let i = 1; i<arr.length; i++)\r\n    if(arr[i].id > res)\r\n    res = arr[i].id;\r\n    return res;\r\n  }\r\n  \r\n  function Add() {\r\n    if(strings.length !== 0) {\r\n      let newArr = [...strings, { id: getMaxId(strings)+1, val: \"\", check: 0}];\r\n      setString(newArr);\r\n    }\r\n    else {\r\n      setString([{ id: 0, val: \"\", check: 0}]);\r\n    }\r\n  }\r\n\r\n  function AddNear(event) {\r\n    if(event.key === \"Enter\") {\r\n      event.preventDefault();\r\n      let ind = event.target.id;\r\n      let newArr = [];\r\n      strings.forEach(element => {\r\n        newArr.push(element);\r\n        if(element.id === parseInt(ind))\r\n          newArr.push({ id: getMaxId(strings)+1, val: \"\", check: 0})\r\n      });\r\n      setString(newArr);\r\n    }\r\n  }\r\n  \r\n  function SaveVal(event) {\r\n    let ind = event.target.id;\r\n    ind = parseInt(ind.slice(0, -1));\r\n    let newArr = strings.map((el) => {\r\n      if (ind === el.id) {\r\n        return {id: el.id,val: event.target.value, check: el.check};\r\n      }\r\n      else return {id: el.id,val: el.val, check: el.check};\r\n    })\r\n    setString(newArr);\r\n    UpdateLocalStorage(newArr);\r\n  }\r\n\r\n  function Change(ind) {\r\n    let element = document.getElementById(ind.toString());\r\n    let flag;\r\n    if(element.childNodes[1].value !== \"\")\r\n    {\r\n      if(element.childNodes[0].checked) {\r\n        element.childNodes[1].style.textDecoration = \"line-through\";\r\n        element.childNodes[1].style.color = \"grey\";\r\n        flag = 1;\r\n      }\r\n      else {\r\n        element.childNodes[1].style.textDecoration = \"none\";\r\n        element.childNodes[1].style.color = \"black\";\r\n        flag = 0;\r\n      }\r\n    }\r\n    let newArr = strings.map((el) => {\r\n      if (ind === el.id) {\r\n        return {id: el.id,val: el.val, check: flag};\r\n      }\r\n      else return {id: el.id,val: el.val, check: el.check};\r\n    })\r\n    setString(newArr);\r\n    UpdateLocalStorage(newArr);\r\n  }\r\n\r\n\r\n  function Delete(ind) {\r\n    const newList = strings.filter((str) => str.id !== ind);\r\n    setString(newList);\r\n    UpdateLocalStorage(newList);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"Title\">\r\n        ToDoList\r\n      </header>\r\n      <form className=\"List\" id=\"form\">\r\n        <ul>\r\n          {strings.map((str) => (\r\n            <li key={str.id} id={str.id}>\r\n              <Input id={str.id} Change={Change} check={str.check} val={str.val} />\r\n              <String id={str.id} val={str.val} check={str.check} AddNear={AddNear} SaveVal={SaveVal}/>\r\n              <button type=\"button\" className=\"DeleteLine\" onClick={()=>Delete(str.id)}><i className=\"fa fa-close\"></i></button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </form>\r\n      <button type=\"button\" className=\"AddLine\" onClick={()=>Add()}><i className=\"fa fa-plus\"></i>{' '}Добавить строку</button>\r\n      <span className=\"AddLine\">Для добавления задачи в середине списка, нажмите enter, находясь в одной из задач</span>\r\n      <span className=\"AddLine\">Пустые задачи будут удалены после перезагрузки страницы</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}